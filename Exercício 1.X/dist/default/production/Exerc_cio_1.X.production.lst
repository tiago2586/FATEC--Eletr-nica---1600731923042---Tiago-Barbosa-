

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Mar 06 19:10:16 2021

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.40
    18                           ; Generated 01/12/2016 GMT
    19                           ; 
    20                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  0008E4                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for EscreveInteiroLCD@F4004
    57  0008E4  30                 	db	48
    58  0008E5  30                 	db	48
    59  0008E6  30                 	db	48
    60  0008E7  30                 	db	48
    61  0008E8  30                 	db	48
    62  0008E9  30                 	db	48
    63  0008EA  00                 	db	0
    64                           
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	opt stack 0
    68  000800  00                 	db	0
    69  000801  0001               	dw	1
    70  000803  0000               	dw	0
    71  000805  000A               	dw	10
    72  000807  0000               	dw	0
    73  000809  0064               	dw	100
    74  00080B  0000               	dw	0
    75  00080D  03E8               	dw	1000
    76  00080F  0000               	dw	0
    77  000811  2710               	dw	10000
    78  000813  0000               	dw	0
    79  000815  86A0               	dw	34464
    80  000817  0001               	dw	1
    81  000819  4240               	dw	16960
    82  00081B  000F               	dw	15
    83  00081D  9680               	dw	38528
    84  00081F  0098               	dw	152
    85  000821  E100               	dw	57600
    86  000823  05F5               	dw	1525
    87  000825  CA00               	dw	51712
    88  000827  3B9A               	dw	15258
    89  000829                     __end_of_dpowers:
    90                           	opt stack 0
    91  0000                     _ADCON1	set	4033
    92  0000                     _PORTB	set	3969
    93  0000                     _PORTDbits	set	3971
    94  0000                     _PORTEbits	set	3972
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISDbits	set	3989
    97  0000                     _TRISE	set	3990
    98  000829  25                 	db	37
    99  00082A  6C                 	db	108	;'l'
   100  00082B  75                 	db	117	;'u'
   101  00082C  2E                 	db	46
   102  00082D  25                 	db	37
   103  00082E  36                 	db	54	;'6'
   104  00082F  2E                 	db	46
   105  000830  36                 	db	54	;'6'
   106  000831  6C                 	db	108	;'l'
   107  000832  75                 	db	117	;'u'
   108  000833  00                 	db	0
   109  000834  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  000870                     __pcinit:
   115                           	opt stack 0
   116  000870                     start_initialization:
   117                           	opt stack 0
   118  000870                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (7 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  000870  0EE4               	movlw	low __pidataCOMRAM
   124  000872  6EF6               	movwf	tblptrl,c
   125  000874  0E08               	movlw	high __pidataCOMRAM
   126  000876  6EF7               	movwf	tblptrh,c
   127  000878  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  00087A  6EF8               	movwf	tblptru,c
   129  00087C  EE00  F012         	lfsr	0,__pdataCOMRAM
   130  000880  EE10 F007          	lfsr	1,7
   131  000884                     copy_data0:
   132  000884  0009               	tblrd		*+
   133  000886  CFF5 FFEE          	movff	tablat,postinc0
   134  00088A  50E5               	movf	postdec1,w,c
   135  00088C  50E1               	movf	fsr1l,w,c
   136  00088E  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to COMRAM (17 bytes)
   139  000890  EE00  F001         	lfsr	0,__pbssCOMRAM
   140  000894  0E11               	movlw	17
   141  000896                     clear_0:
   142  000896  6AEE               	clrf	postinc0,c
   143  000898  06E8               	decf	wreg,f,c
   144  00089A  E1FD               	bnz	clear_0
   145  00089C                     end_of_initialization:
   146                           	opt stack 0
   147  00089C                     __end_of__initialization:
   148                           	opt stack 0
   149  00089C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  00089E  6EF8               	movwf	tblptru,c
   151  0008A0  0100               	movlb	0
   152  0008A2  EF1B  F004         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           postdec1	equ	0xFE5
   160                           fsr1l	equ	0xFE1
   161                           
   162                           	psect	bssCOMRAM
   163  000001                     __pbssCOMRAM:
   164                           	opt stack 0
   165  000001                     ftoa@buf:
   166                           	opt stack 0
   167  000001                     	ds	17
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           postdec1	equ	0xFE5
   175                           fsr1l	equ	0xFE1
   176                           
   177                           	psect	dataCOMRAM
   178  000012                     __pdataCOMRAM:
   179                           	opt stack 0
   180  000012                     EscreveInteiroLCD@F4004:
   181                           	opt stack 0
   182  000012                     	ds	7
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	cstackCOMRAM
   193  000019                     __pcstackCOMRAM:
   194                           	opt stack 0
   195  000019                     delay_ms@tempodeAtraso:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x0
   199  000019                     	ds	2
   200  00001B                     ??_delay_ms:
   201                           
   202                           ; 1 bytes @ 0x2
   203  00001B                     	ds	1
   204  00001C                     main@vetorLeds:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x3
   208  00001C                     	ds	1
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 58 in file "exercicio1.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;  vetorLeds       1    3[COMRAM] unsigned char 
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   237 ;;      Params:         0       0       0       0       0       0       0       0       0
   238 ;;      Locals:         1       0       0       0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0
   240 ;;      Totals:         1       0       0       0       0       0       0       0       0
   241 ;;Total ram usage:        1 bytes
   242 ;; Hardware stack levels required when called:    2
   243 ;; This function calls:
   244 ;;		_delay_ms
   245 ;;		_testa_botao
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252  000836                     __ptext0:
   253                           	opt stack 0
   254  000836                     _main:
   255                           	opt stack 29
   256                           
   257                           ;exercicio1.c: 61: ADCON1 = 0x0F;
   258                           
   259                           ;incstack = 0
   260  000836  0E0F               	movlw	15
   261  000838  6EC1               	movwf	4033,c	;volatile
   262                           
   263                           ;exercicio1.c: 63: TRISB = 0x00;
   264  00083A  0E00               	movlw	0
   265  00083C  6E93               	movwf	3987,c	;volatile
   266                           
   267                           ;exercicio1.c: 64: TRISE = 0xFF;
   268  00083E  6896               	setf	3990,c	;volatile
   269  000840                     l1195:
   270                           
   271                           ;exercicio1.c: 67: {
   272                           ;exercicio1.c: 69: PORTB = 0xFF;
   273  000840  6881               	setf	3969,c	;volatile
   274                           
   275                           ;exercicio1.c: 71: if(PORTEbits.RE1 == 0)
   276  000842  B284               	btfsc	3972,1,c	;volatile
   277  000844  D7FD               	goto	l1195
   278                           
   279                           ;exercicio1.c: 72: {
   280                           ;exercicio1.c: 73: char vetorLeds = 0x01;
   281  000846  0E01               	movlw	1
   282  000848  6E1C               	movwf	main@vetorLeds,c
   283                           
   284                           ;exercicio1.c: 74: while (vetorLeds > 0)
   285  00084A  D00E               	goto	l1207
   286  00084C                     l1201:
   287                           
   288                           ;exercicio1.c: 75: {
   289                           ;exercicio1.c: 76: PORTB = ~vetorLeds;
   290  00084C  501C               	movf	main@vetorLeds,w,c
   291  00084E  0AFF               	xorlw	255
   292  000850  6E81               	movwf	3969,c	;volatile
   293                           
   294                           ;exercicio1.c: 77: vetorLeds = vetorLeds << 1;
   295  000852  501C               	movf	main@vetorLeds,w,c
   296  000854  241C               	addwf	main@vetorLeds,w,c
   297  000856  6E1C               	movwf	main@vetorLeds,c
   298                           
   299                           ;exercicio1.c: 78: delay_ms(1000);
   300  000858  0E03               	movlw	3
   301  00085A  6E1A               	movwf	delay_ms@tempodeAtraso+1,c
   302  00085C  0EE8               	movlw	232
   303  00085E  6E19               	movwf	delay_ms@tempodeAtraso,c
   304  000860  EC53  F004         	call	_delay_ms	;wreg free
   305                           
   306                           ;exercicio1.c: 79: testa_botao();
   307  000864  EC64  F004         	call	_testa_botao	;wreg free
   308  000868                     l1207:
   309  000868  501C               	movf	main@vetorLeds,w,c
   310  00086A  B4D8               	btfsc	status,2,c
   311  00086C  D7E9               	goto	l1195
   312  00086E  D7EE               	goto	l1201
   313  000870                     __end_of_main:
   314                           	opt stack 0
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _testa_botao *****************
   326 ;; Defined at:
   327 ;;		line 99 in file "exercicio1.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    1
   348 ;; This function calls:
   349 ;;		_delay_ms
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  0008C8                     __ptext1:
   357                           	opt stack 0
   358  0008C8                     _testa_botao:
   359                           	opt stack 29
   360                           
   361                           ;exercicio1.c: 101: if(PORTEbits.RE2 == 0)
   362                           
   363                           ;incstack = 0
   364  0008C8  B484               	btfsc	3972,2,c	;volatile
   365  0008CA  0012               	return	
   366                           
   367                           ;exercicio1.c: 102: {
   368                           ;exercicio1.c: 103: PORTB = 0x4B;
   369  0008CC  0E4B               	movlw	75
   370  0008CE  6E81               	movwf	3969,c	;volatile
   371                           
   372                           ;exercicio1.c: 104: delay_ms (1000);
   373  0008D0  0E03               	movlw	3
   374  0008D2  6E1A               	movwf	delay_ms@tempodeAtraso+1,c
   375  0008D4  0EE8               	movlw	232
   376  0008D6  6E19               	movwf	delay_ms@tempodeAtraso,c
   377  0008D8  EC53  F004         	call	_delay_ms	;wreg free
   378  0008DC                     l30:
   379  0008DC  A484               	btfss	3972,2,c	;volatile
   380  0008DE  D7FE               	goto	l30
   381                           
   382                           ;exercicio1.c: 107: }
   383                           ;exercicio1.c: 108: PORTB = 0XFF;
   384  0008E0  6881               	setf	3969,c	;volatile
   385  0008E2  0012               	return	
   386  0008E4                     __end_of_testa_botao:
   387                           	opt stack 0
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           status	equ	0xFD8
   397                           
   398 ;; *************** function _delay_ms *****************
   399 ;; Defined at:
   400 ;;		line 112 in file "exercicio1.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  tempodeAtras    2    0[COMRAM] unsigned int 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         2       0       0       0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0
   416 ;;      Temps:          1       0       0       0       0       0       0       0       0
   417 ;;      Totals:         3       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:        3 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;;		_testa_botao
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text2
   429  0008A6                     __ptext2:
   430                           	opt stack 0
   431  0008A6                     _delay_ms:
   432                           	opt stack 29
   433                           
   434                           ;exercicio1.c: 114: while (--tempodeAtraso)
   435                           
   436                           ;incstack = 0
   437  0008A6  D008               	goto	l1183
   438  0008A8                     l1181:
   439                           
   440                           ;exercicio1.c: 115: {
   441                           ;exercicio1.c: 116: _delay((unsigned long)((1)*(48000000/4000.0)));
   442  0008A8  0E10               	movlw	16
   443  0008AA  6E1B               	movwf	??_delay_ms& (0+255),c
   444  0008AC  0E94               	movlw	148
   445  0008AE                     u477:
   446  0008AE  2EE8               	decfsz	wreg,f,c
   447  0008B0  D7FE               	bra	u477
   448  0008B2  2E1B               	decfsz	??_delay_ms& (0+255),f,c
   449  0008B4  D7FC               	bra	u477
   450  0008B6  D000               	nop2	
   451  0008B8                     l1183:
   452  0008B8  0619               	decf	delay_ms@tempodeAtraso,f,c
   453  0008BA  A0D8               	btfss	status,0,c
   454  0008BC  061A               	decf	delay_ms@tempodeAtraso+1,f,c
   455  0008BE  5019               	movf	delay_ms@tempodeAtraso,w,c
   456  0008C0  101A               	iorwf	delay_ms@tempodeAtraso+1,w,c
   457  0008C2  B4D8               	btfsc	status,2,c
   458  0008C4  0012               	return	
   459  0008C6  D7F0               	goto	l1181
   460  0008C8                     __end_of_delay_ms:
   461                           	opt stack 0
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           status	equ	0xFD8
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           status	equ	0xFD8
   480                           
   481                           	psect	rparam
   482  0000                     tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    40
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_delay_ms
    _testa_botao->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     368
                                              3 COMRAM     1     1      0
                           _delay_ms
                        _testa_botao
 ---------------------------------------------------------------------------------
 (1) _testa_botao                                          0     0      0     150
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2     150
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _testa_botao
     _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      1C       1       29.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      20        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Mar 06 19:10:16 2021

                     l30 08DC                      u477 08AE                      wreg 000FE8  
                   l1201 084C                     l1207 0868                     l1181 08A8  
                   l1183 08B8                     l1195 0840                     STR_1 0829  
                   _main 0836                     fsr1l 000FE1                     start 0000  
           ___param_bank 000000                    ?_main 0019                    _PORTB 000F81  
                  _TRISB 000F93                    _TRISE 000F96          __end_of_dpowers 0829  
                  tablat 000FF5                    status 000FD8          __initialization 0870  
           __end_of_main 0870                   ??_main 001C            __activetblptr 000002  
                 _ADCON1 000FC1         __end_of_delay_ms 08C8                   clear_0 0896  
           __pdataCOMRAM 0012             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8            main@vetorLeds 001C  
           ?_testa_botao 0019               __accesstop 0060  __end_of__initialization 089C  
          ___rparam_used 000001           __pcstackCOMRAM 0019                ?_delay_ms 0019  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0870                  __ramtop 0800                  __ptext0 0836  
                __ptext1 08C8                  __ptext2 08A6                  _dpowers 0801  
             ??_delay_ms 001B     end_of_initialization 089C                  ftoa@buf 0001  
   __size_of_testa_botao 001C            __Lmediumconst 0000                  postdec1 000FE5  
                postinc0 000FEE                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISDbits 000F95            __pidataCOMRAM 08E4      start_initialization 0870  
            __pbssCOMRAM 0001        __size_of_delay_ms 0022   EscreveInteiroLCD@F4004 0012  
            __smallconst 0800    delay_ms@tempodeAtraso 0019            ??_testa_botao 001C  
              copy_data0 0884                 __Hrparam 0000                 __Lrparam 0000  
               _delay_ms 08A6            __size_of_main 003A      __end_of_testa_botao 08E4  
            _testa_botao 08C8  
