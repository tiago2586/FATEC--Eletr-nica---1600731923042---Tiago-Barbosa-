

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Mar 06 21:16:22 2021

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.40
    24                           ; Generated 01/12/2016 GMT
    25                           ; 
    26                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000BD4                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for EscreveInteiroLCD@F4004
    63  000BD4  30                 	db	48
    64  000BD5  30                 	db	48
    65  000BD6  30                 	db	48
    66  000BD7  30                 	db	48
    67  000BD8  30                 	db	48
    68  000BD9  30                 	db	48
    69  000BDA  00                 	db	0
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	opt stack 0
    74  000800  00                 	db	0
    75  000801  0001               	dw	1
    76  000803  0000               	dw	0
    77  000805  000A               	dw	10
    78  000807  0000               	dw	0
    79  000809  0064               	dw	100
    80  00080B  0000               	dw	0
    81  00080D  03E8               	dw	1000
    82  00080F  0000               	dw	0
    83  000811  2710               	dw	10000
    84  000813  0000               	dw	0
    85  000815  86A0               	dw	34464
    86  000817  0001               	dw	1
    87  000819  4240               	dw	16960
    88  00081B  000F               	dw	15
    89  00081D  9680               	dw	38528
    90  00081F  0098               	dw	152
    91  000821  E100               	dw	57600
    92  000823  05F5               	dw	1525
    93  000825  CA00               	dw	51712
    94  000827  3B9A               	dw	15258
    95  000829                     __end_of_dpowers:
    96                           	opt stack 0
    97  000829                     main@F3878:
    98                           	opt stack 0
    99  000829  54                 	db	84
   100  00082A  49                 	db	73
   101  00082B  41                 	db	65
   102  00082C  47                 	db	71
   103  00082D  4F                 	db	79
   104  00082E  20                 	db	32
   105  00082F  42                 	db	66
   106  000830  41                 	db	65
   107  000831  52                 	db	82
   108  000832  42                 	db	66
   109  000833  4F                 	db	79
   110  000834  53                 	db	83
   111  000835  41                 	db	65
   112  000836  20                 	db	32
   113  000837  00                 	db	0
   114  000838                     __end_ofmain@F3878:
   115                           	opt stack 0
   116  000838                     main@F3880:
   117                           	opt stack 0
   118  000838  52                 	db	82
   119  000839  41                 	db	65
   120  00083A  3A                 	db	58
   121  00083B  20                 	db	32
   122  00083C  37                 	db	55
   123  00083D  33                 	db	51
   124  00083E  31                 	db	49
   125  00083F  39                 	db	57
   126  000840  32                 	db	50
   127  000841  33                 	db	51
   128  000842  30                 	db	48
   129  000843  34                 	db	52
   130  000844  32                 	db	50
   131  000845  20                 	db	32
   132  000846  00                 	db	0
   133  000847                     __end_ofmain@F3880:
   134                           	opt stack 0
   135  0000                     _ADCON1	set	4033
   136  0000                     _PORTB	set	3969
   137  0000                     _PORTDbits	set	3971
   138  0000                     _PORTEbits	set	3972
   139  0000                     _TRISB	set	3987
   140  0000                     _TRISDbits	set	3989
   141  0000                     _TRISE	set	3990
   142  000847  25                 	db	37
   143  000848  6C                 	db	108	;'l'
   144  000849  75                 	db	117	;'u'
   145  00084A  2E                 	db	46
   146  00084B  25                 	db	37
   147  00084C  36                 	db	54	;'6'
   148  00084D  2E                 	db	46
   149  00084E  36                 	db	54	;'6'
   150  00084F  6C                 	db	108	;'l'
   151  000850  75                 	db	117	;'u'
   152  000851  00                 	db	0
   153  000852  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158  000B34                     __pcinit:
   159                           	opt stack 0
   160  000B34                     start_initialization:
   161                           	opt stack 0
   162  000B34                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Initialize objects allocated to COMRAM (7 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  000B34  0ED4               	movlw	low __pidataCOMRAM
   168  000B36  6EF6               	movwf	tblptrl,c
   169  000B38  0E0B               	movlw	high __pidataCOMRAM
   170  000B3A  6EF7               	movwf	tblptrh,c
   171  000B3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  000B3E  6EF8               	movwf	tblptru,c
   173  000B40  EE00  F036         	lfsr	0,__pdataCOMRAM
   174  000B44  EE10 F007          	lfsr	1,7
   175  000B48                     copy_data0:
   176  000B48  0009               	tblrd		*+
   177  000B4A  CFF5 FFEE          	movff	tablat,postinc0
   178  000B4E  50E5               	movf	postdec1,w,c
   179  000B50  50E1               	movf	fsr1l,w,c
   180  000B52  E1FA               	bnz	copy_data0
   181                           
   182                           ; Clear objects allocated to COMRAM (17 bytes)
   183  000B54  EE00  F025         	lfsr	0,__pbssCOMRAM
   184  000B58  0E11               	movlw	17
   185  000B5A                     clear_0:
   186  000B5A  6AEE               	clrf	postinc0,c
   187  000B5C  06E8               	decf	wreg,f,c
   188  000B5E  E1FD               	bnz	clear_0
   189  000B60                     end_of_initialization:
   190                           	opt stack 0
   191  000B60                     __end_of__initialization:
   192                           	opt stack 0
   193  000B60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  000B62  6EF8               	movwf	tblptru,c
   195  000B64  0100               	movlb	0
   196  000B66  EFBF  F004         	goto	_main	;jump to C main() function
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           postdec1	equ	0xFE5
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	bssCOMRAM
   207  000025                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000025                     ftoa@buf:
   210                           	opt stack 0
   211  000025                     	ds	17
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	dataCOMRAM
   222  000036                     __pdataCOMRAM:
   223                           	opt stack 0
   224  000036                     EscreveInteiroLCD@F4004:
   225                           	opt stack 0
   226  000036                     	ds	7
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           postdec1	equ	0xFE5
   234                           fsr1l	equ	0xFE1
   235                           
   236                           	psect	cstackCOMRAM
   237  000001                     __pcstackCOMRAM:
   238                           	opt stack 0
   239  000001                     Delay@Cnt1:
   240                           	opt stack 0
   241  000001                     delay_ms@tempodeAtraso:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x0
   245  000001                     	ds	1
   246  000002                     Delay@Cnt2:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x1
   250  000002                     	ds	1
   251  000003                     ??_delay_ms:
   252  000003                     EscreveComandoLCD@cmd:
   253                           	opt stack 0
   254  000003                     EnderecoCursor@endereco:
   255                           	opt stack 0
   256  000003                     EscreveCaractereLCD@data:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x2
   260  000003                     	ds	1
   261  000004                     ??_ConfiguraLCD:
   262  000004                     PosicaoCursorLCD@coluna:
   263                           	opt stack 0
   264  000004                     EscreveFraseRamLCD@buffer:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x3
   268  000004                     	ds	1
   269  000005                     PosicaoCursorLCD@linha:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x4
   273  000005                     	ds	1
   274  000006                     PosicaoCursorLCD@EnderecoLCD:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x5
   278  000006                     	ds	1
   279  000007                     main@Texto_0:
   280                           	opt stack 0
   281                           
   282                           ; 15 bytes @ 0x6
   283  000007                     	ds	15
   284  000016                     main@Texto_1:
   285                           	opt stack 0
   286                           
   287                           ; 15 bytes @ 0x15
   288  000016                     	ds	15
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 60 in file "ExerciciosDisplayLCD.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  Texto_1        15   21[COMRAM] const unsigned char [15]
   308 ;;  Texto_0        15    6[COMRAM] const unsigned char [15]
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   318 ;;      Params:         0       0       0       0       0       0       0       0       0
   319 ;;      Locals:        30       0       0       0       0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0
   321 ;;      Totals:        30       0       0       0       0       0       0       0       0
   322 ;;Total ram usage:       30 bytes
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_ConfiguraLCD
   326 ;;		_EscreveFraseRamLCD
   327 ;;		_PosicaoCursorLCD
   328 ;;		_delay_ms
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335  00097E                     __ptext0:
   336                           	opt stack 0
   337  00097E                     _main:
   338                           	opt stack 28
   339                           
   340                           ;ExerciciosDisplayLCD.c: 63: ADCON1 = 0x0F;
   341                           
   342                           ;incstack = 0
   343  00097E  0E0F               	movlw	15
   344  000980  6EC1               	movwf	4033,c	;volatile
   345                           
   346                           ;ExerciciosDisplayLCD.c: 65: TRISB = 0x00;
   347  000982  0E00               	movlw	0
   348  000984  6E93               	movwf	3987,c	;volatile
   349                           
   350                           ;ExerciciosDisplayLCD.c: 66: TRISE = 0xFF;
   351  000986  6896               	setf	3990,c	;volatile
   352                           
   353                           ;ExerciciosDisplayLCD.c: 69: const unsigned char Texto_0[] = "TIAGO BARBOSA ";
   354  000988  0E29               	movlw	low main@F3878
   355  00098A  6EF6               	movwf	tblptrl,c
   356  00098C                     	if	1	;There is more than 1 active tblptr byte
   357  00098C  0E08               	movlw	high main@F3878
   358  00098E  6EF7               	movwf	tblptrh,c
   359  000990                     	endif
   360  000990                     	if	0	;There are less than 3 active tblptr bytes
   361  000990                     	endif
   362  000990  EE20  F007         	lfsr	2,main@Texto_0
   363  000994  0E0E               	movlw	14
   364  000996                     u450:
   365  000996  0009               	tblrd		*+
   366  000998  CFF5 FFDE          	movff	tablat,postinc2
   367  00099C  06E8               	decf	wreg,f,c
   368  00099E  E2FB               	bc	u450
   369                           
   370                           ;ExerciciosDisplayLCD.c: 70: const unsigned char Texto_1[] = "RA: 731923042 ";
   371  0009A0  0E38               	movlw	low main@F3880
   372  0009A2  6EF6               	movwf	tblptrl,c
   373  0009A4                     	if	1	;There is more than 1 active tblptr byte
   374  0009A4  0E08               	movlw	high main@F3880
   375  0009A6  6EF7               	movwf	tblptrh,c
   376  0009A8                     	endif
   377  0009A8                     	if	0	;There are less than 3 active tblptr bytes
   378  0009A8                     	endif
   379  0009A8  EE20  F016         	lfsr	2,main@Texto_1
   380  0009AC  0E0E               	movlw	14
   381  0009AE                     u460:
   382  0009AE  0009               	tblrd		*+
   383  0009B0  CFF5 FFDE          	movff	tablat,postinc2
   384  0009B4  06E8               	decf	wreg,f,c
   385  0009B6  E2FB               	bc	u460
   386                           
   387                           ;ExerciciosDisplayLCD.c: 72: ConfiguraLCD();
   388  0009B8  EC2A  F004         	call	_ConfiguraLCD	;wreg free
   389                           
   390                           ;ExerciciosDisplayLCD.c: 73: delay_ms(10);
   391  0009BC  0E00               	movlw	0
   392  0009BE  6E02               	movwf	delay_ms@tempodeAtraso+1,c
   393  0009C0  0E0A               	movlw	10
   394  0009C2  6E01               	movwf	delay_ms@tempodeAtraso,c
   395  0009C4  ECD9  F005         	call	_delay_ms	;wreg free
   396                           
   397                           ;ExerciciosDisplayLCD.c: 74: PosicaoCursorLCD(1, 1);
   398  0009C8  0E01               	movlw	1
   399  0009CA  6E04               	movwf	PosicaoCursorLCD@coluna,c
   400  0009CC  0E01               	movlw	1
   401  0009CE  EC69  F005         	call	_PosicaoCursorLCD
   402                           
   403                           ;ExerciciosDisplayLCD.c: 75: EscreveFraseRamLCD(Texto_0);
   404  0009D2  0E07               	movlw	low main@Texto_0
   405  0009D4  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   406  0009D6  0E00               	movlw	high main@Texto_0
   407  0009D8  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   408  0009DA  ECB5  F005         	call	_EscreveFraseRamLCD	;wreg free
   409                           
   410                           ;ExerciciosDisplayLCD.c: 76: PosicaoCursorLCD(2, 1);
   411  0009DE  0E01               	movlw	1
   412  0009E0  6E04               	movwf	PosicaoCursorLCD@coluna,c
   413  0009E2  0E02               	movlw	2
   414  0009E4  EC69  F005         	call	_PosicaoCursorLCD
   415                           
   416                           ;ExerciciosDisplayLCD.c: 77: EscreveFraseRamLCD(Texto_1);
   417  0009E8  0E16               	movlw	low main@Texto_1
   418  0009EA  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   419  0009EC  0E00               	movlw	high main@Texto_1
   420  0009EE  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   421  0009F0  ECB5  F005         	call	_EscreveFraseRamLCD	;wreg free
   422  0009F4                     l162:
   423  0009F4  D7FF               	goto	l162
   424  0009F6                     __end_of_main:
   425                           	opt stack 0
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           postinc2	equ	0xFDE
   435                           
   436 ;; *************** function _delay_ms *****************
   437 ;; Defined at:
   438 ;;		line 109 in file "ExerciciosDisplayLCD.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  tempodeAtras    2    0[COMRAM] unsigned int 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   452 ;;      Params:         2       0       0       0       0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0
   454 ;;      Temps:          1       0       0       0       0       0       0       0       0
   455 ;;      Totals:         3       0       0       0       0       0       0       0       0
   456 ;;Total ram usage:        3 bytes
   457 ;; Hardware stack levels used:    1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;;		_testa_botao
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text1
   467  000BB2                     __ptext1:
   468                           	opt stack 0
   469  000BB2                     _delay_ms:
   470                           	opt stack 30
   471                           
   472                           ;ExerciciosDisplayLCD.c: 111: while (--tempodeAtraso)
   473                           
   474                           ;incstack = 0
   475  000BB2  D008               	goto	l1223
   476  000BB4                     l1221:
   477                           
   478                           ;ExerciciosDisplayLCD.c: 112: {
   479                           ;ExerciciosDisplayLCD.c: 113: _delay((unsigned long)((1)*(48000000/4000.0)));
   480  000BB4  0E10               	movlw	16
   481  000BB6  6E03               	movwf	??_delay_ms& (0+255),c
   482  000BB8  0E94               	movlw	148
   483  000BBA                     u497:
   484  000BBA  2EE8               	decfsz	wreg,f,c
   485  000BBC  D7FE               	bra	u497
   486  000BBE  2E03               	decfsz	??_delay_ms& (0+255),f,c
   487  000BC0  D7FC               	bra	u497
   488  000BC2  D000               	nop2	
   489  000BC4                     l1223:
   490  000BC4  0601               	decf	delay_ms@tempodeAtraso,f,c
   491  000BC6  A0D8               	btfss	status,0,c
   492  000BC8  0602               	decf	delay_ms@tempodeAtraso+1,f,c
   493  000BCA  5001               	movf	delay_ms@tempodeAtraso,w,c
   494  000BCC  1002               	iorwf	delay_ms@tempodeAtraso+1,w,c
   495  000BCE  B4D8               	btfsc	status,2,c
   496  000BD0  0012               	return	
   497  000BD2  D7F0               	goto	l1221
   498  000BD4                     __end_of_delay_ms:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           postinc2	equ	0xFDE
   509                           status	equ	0xFD8
   510                           
   511 ;; *************** function _PosicaoCursorLCD *****************
   512 ;; Defined at:
   513 ;;		line 280 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  linha           1    wreg     unsigned char 
   516 ;;  coluna          1    3[COMRAM] unsigned char 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  linha           1    4[COMRAM] unsigned char 
   519 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   529 ;;      Params:         1       0       0       0       0       0       0       0       0
   530 ;;      Locals:         2       0       0       0       0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0       0       0
   532 ;;      Totals:         3       0       0       0       0       0       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    2
   536 ;; This function calls:
   537 ;;		_EnderecoCursor
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  000AD2                     __ptext2:
   545                           	opt stack 0
   546  000AD2                     _PosicaoCursorLCD:
   547                           	opt stack 28
   548                           
   549                           ;incstack = 0
   550                           ;PosicaoCursorLCD@linha stored from wreg
   551  000AD2  6E05               	movwf	PosicaoCursorLCD@linha,c
   552                           
   553                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   554  000AD4  0E00               	movlw	0
   555  000AD6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   556                           
   557                           ;displayLCD.c: 292: if (coluna >= 0)
   558  000AD8  0604               	decf	PosicaoCursorLCD@coluna,f,c
   559                           
   560                           ;displayLCD.c: 293: {
   561                           ;displayLCD.c: 296: switch (linha)
   562  000ADA  D01E               	goto	l1207
   563  000ADC                     l70:
   564                           
   565                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   566  000ADC  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   567                           
   568                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   569  000AE0  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   570  000AE2  EC34  F005         	call	_EnderecoCursor
   571                           
   572                           ;displayLCD.c: 301: break;
   573  000AE6  0012               	return	
   574  000AE8                     l1191:
   575                           
   576                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   577  000AE8  5004               	movf	PosicaoCursorLCD@coluna,w,c
   578  000AEA  0F40               	addlw	64
   579  000AEC  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   580                           
   581                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   582  000AEE  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   583  000AF0  EC34  F005         	call	_EnderecoCursor
   584                           
   585                           ;displayLCD.c: 306: break;
   586  000AF4  0012               	return	
   587  000AF6                     l1195:
   588                           
   589                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   590  000AF6  5004               	movf	PosicaoCursorLCD@coluna,w,c
   591  000AF8  0F14               	addlw	20
   592  000AFA  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   593                           
   594                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   595  000AFC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   596  000AFE  EC34  F005         	call	_EnderecoCursor
   597                           
   598                           ;displayLCD.c: 311: break;
   599  000B02  0012               	return	
   600  000B04                     l1199:
   601                           
   602                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   603  000B04  5004               	movf	PosicaoCursorLCD@coluna,w,c
   604  000B06  0F54               	addlw	84
   605  000B08  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   606                           
   607                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   608  000B0A  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   609  000B0C  EC34  F005         	call	_EnderecoCursor
   610                           
   611                           ;displayLCD.c: 316: break;
   612  000B10  0012               	return	
   613  000B12                     l1203:
   614                           
   615                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   616  000B12  0E00               	movlw	0
   617  000B14  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   618                           
   619                           ;displayLCD.c: 321: }
   620                           
   621                           ;displayLCD.c: 320: break;
   622  000B16  0012               	return	
   623  000B18                     l1207:
   624  000B18  5005               	movf	PosicaoCursorLCD@linha,w,c
   625                           
   626                           ; Switch size 1, requested type "space"
   627                           ; Number of cases is 4, Range of values is 1 to 4
   628                           ; switch strategies available:
   629                           ; Name         Instructions Cycles
   630                           ; simple_byte           13     7 (average)
   631                           ;	Chosen strategy is simple_byte
   632  000B1A  0A01               	xorlw	1	; case 1
   633  000B1C  B4D8               	btfsc	status,2,c
   634  000B1E  D7DE               	goto	l70
   635  000B20  0A03               	xorlw	3	; case 2
   636  000B22  B4D8               	btfsc	status,2,c
   637  000B24  D7E1               	goto	l1191
   638  000B26  0A01               	xorlw	1	; case 3
   639  000B28  B4D8               	btfsc	status,2,c
   640  000B2A  D7E5               	goto	l1195
   641  000B2C  0A07               	xorlw	7	; case 4
   642  000B2E  B4D8               	btfsc	status,2,c
   643  000B30  D7E9               	goto	l1199
   644  000B32  D7EF               	goto	l1203
   645  000B34                     __end_of_PosicaoCursorLCD:
   646                           	opt stack 0
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           postinc2	equ	0xFDE
   656                           status	equ	0xFD8
   657                           
   658 ;; *************** function _EnderecoCursor *****************
   659 ;; Defined at:
   660 ;;		line 229 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  endereco        1    wreg     unsigned char 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  endereco        1    2[COMRAM] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         1       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        1 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    1
   681 ;; This function calls:
   682 ;;		_Delay
   683 ;; This function is called by:
   684 ;;		_PosicaoCursorLCD
   685 ;;		_CriaCaractereLCD
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text3
   690  000A68                     __ptext3:
   691                           	opt stack 0
   692  000A68                     _EnderecoCursor:
   693                           	opt stack 28
   694                           
   695                           ;incstack = 0
   696                           ;EnderecoCursor@endereco stored from wreg
   697  000A68  6E03               	movwf	EnderecoCursor@endereco,c
   698                           
   699                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
   700  000A6A  9483               	bcf	3971,2,c	;volatile
   701                           
   702                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
   703  000A6C  9283               	bcf	3971,1,c	;volatile
   704                           
   705                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
   706  000A6E  9083               	bcf	3971,0,c	;volatile
   707                           
   708                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
   709  000A70  8E83               	bsf	3971,7,c	;volatile
   710                           
   711                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
   712  000A72  A803               	btfss	EnderecoCursor@endereco,4,c
   713  000A74  D002               	goto	l51
   714  000A76  8883               	bsf	3971,4,c	;volatile
   715  000A78  D001               	goto	l937
   716  000A7A                     l51:
   717                           
   718                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
   719  000A7A  9883               	bcf	3971,4,c	;volatile
   720  000A7C                     l937:
   721                           
   722                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
   723  000A7C  AA03               	btfss	EnderecoCursor@endereco,5,c
   724  000A7E  D002               	goto	l53
   725  000A80  8A83               	bsf	3971,5,c	;volatile
   726  000A82  D001               	goto	l941
   727  000A84                     l53:
   728                           
   729                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
   730  000A84  9A83               	bcf	3971,5,c	;volatile
   731  000A86                     l941:
   732                           
   733                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
   734  000A86  AC03               	btfss	EnderecoCursor@endereco,6,c
   735  000A88  D002               	goto	l55
   736  000A8A  8C83               	bsf	3971,6,c	;volatile
   737  000A8C  D001               	goto	l56
   738  000A8E                     l55:
   739                           
   740                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
   741  000A8E  9C83               	bcf	3971,6,c	;volatile
   742  000A90                     l56:
   743                           
   744                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
   745  000A90  8083               	bsf	3971,0,c	;volatile
   746                           
   747                           ;displayLCD.c: 247: Delay();
   748  000A92  ECC7  F005         	call	_Delay	;wreg free
   749                           
   750                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
   751  000A96  9083               	bcf	3971,0,c	;volatile
   752                           
   753                           ;displayLCD.c: 249: Delay();
   754  000A98  ECC7  F005         	call	_Delay	;wreg free
   755                           
   756                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
   757  000A9C  A003               	btfss	EnderecoCursor@endereco,0,c
   758  000A9E  D002               	goto	l57
   759  000AA0  8883               	bsf	3971,4,c	;volatile
   760  000AA2  D001               	goto	l58
   761  000AA4                     l57:
   762                           
   763                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
   764  000AA4  9883               	bcf	3971,4,c	;volatile
   765  000AA6                     l58:
   766                           
   767                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
   768  000AA6  A203               	btfss	EnderecoCursor@endereco,1,c
   769  000AA8  D002               	goto	l59
   770  000AAA  8A83               	bsf	3971,5,c	;volatile
   771  000AAC  D001               	goto	l60
   772  000AAE                     l59:
   773                           
   774                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
   775  000AAE  9A83               	bcf	3971,5,c	;volatile
   776  000AB0                     l60:
   777                           
   778                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
   779  000AB0  A403               	btfss	EnderecoCursor@endereco,2,c
   780  000AB2  D002               	goto	l61
   781  000AB4  8C83               	bsf	3971,6,c	;volatile
   782  000AB6  D001               	goto	l62
   783  000AB8                     l61:
   784                           
   785                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
   786  000AB8  9C83               	bcf	3971,6,c	;volatile
   787  000ABA                     l62:
   788                           
   789                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
   790  000ABA  A603               	btfss	EnderecoCursor@endereco,3,c
   791  000ABC  D002               	goto	l63
   792  000ABE  8E83               	bsf	3971,7,c	;volatile
   793  000AC0  D001               	goto	l64
   794  000AC2                     l63:
   795                           
   796                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
   797  000AC2  9E83               	bcf	3971,7,c	;volatile
   798  000AC4                     l64:
   799                           
   800                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
   801  000AC4  8083               	bsf	3971,0,c	;volatile
   802                           
   803                           ;displayLCD.c: 263: Delay();
   804  000AC6  ECC7  F005         	call	_Delay	;wreg free
   805                           
   806                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
   807  000ACA  9083               	bcf	3971,0,c	;volatile
   808                           
   809                           ;displayLCD.c: 265: Delay();
   810  000ACC  ECC7  F005         	call	_Delay	;wreg free
   811  000AD0  0012               	return		;funcret
   812  000AD2                     __end_of_EnderecoCursor:
   813                           	opt stack 0
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           postdec1	equ	0xFE5
   821                           fsr1l	equ	0xFE1
   822                           postinc2	equ	0xFDE
   823                           status	equ	0xFD8
   824                           
   825 ;; *************** function _EscreveFraseRamLCD *****************
   826 ;; Defined at:
   827 ;;		line 438 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  buffer          2    3[COMRAM] PTR unsigned char 
   830 ;;		 -> main@Texto_1(15), main@Texto_0(15), EscreveInteiroLCD@texto(7), 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   842 ;;      Params:         2       0       0       0       0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0       0
   845 ;;      Totals:         2       0       0       0       0       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    2
   849 ;; This function calls:
   850 ;;		_EscreveCaractereLCD
   851 ;; This function is called by:
   852 ;;		_main
   853 ;;		_EscreveInteiroLCD
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text4
   858  000B6A                     __ptext4:
   859                           	opt stack 0
   860  000B6A                     _EscreveFraseRamLCD:
   861                           	opt stack 28
   862                           
   863                           ;displayLCD.c: 440: while(*buffer)
   864                           
   865                           ;incstack = 0
   866  000B6A  D009               	goto	l1217
   867  000B6C                     l1213:
   868                           
   869                           ;displayLCD.c: 441: {
   870                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
   871  000B6C  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
   872  000B70  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
   873  000B74  50DF               	movf	indf2,w,c
   874  000B76  ECFB  F004         	call	_EscreveCaractereLCD
   875                           
   876                           ;displayLCD.c: 443: buffer++;
   877  000B7A  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
   878  000B7C  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
   879  000B7E                     l1217:
   880  000B7E  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
   881  000B82  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
   882  000B86  50DF               	movf	indf2,w,c
   883  000B88  B4D8               	btfsc	status,2,c
   884  000B8A  0012               	return	
   885  000B8C  D7EF               	goto	l1213
   886  000B8E                     __end_of_EscreveFraseRamLCD:
   887                           	opt stack 0
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           fsr1l	equ	0xFE1
   896                           indf2	equ	0xFDF
   897                           postinc2	equ	0xFDE
   898                           fsr2h	equ	0xFDA
   899                           fsr2l	equ	0xFD9
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _EscreveCaractereLCD *****************
   903 ;; Defined at:
   904 ;;		line 339 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  data            1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  data            1    2[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   918 ;;      Params:         0       0       0       0       0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0
   921 ;;      Totals:         1       0       0       0       0       0       0       0       0
   922 ;;Total ram usage:        1 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    1
   925 ;; This function calls:
   926 ;;		_Delay
   927 ;; This function is called by:
   928 ;;		_EscreveFraseRamLCD
   929 ;;		_EscreveFloatLCD
   930 ;;		_EscreveFraseLCD
   931 ;;		_CriaCaractereLCD
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text5
   936  0009F6                     __ptext5:
   937                           	opt stack 0
   938  0009F6                     _EscreveCaractereLCD:
   939                           	opt stack 28
   940                           
   941                           ;incstack = 0
   942                           ;EscreveCaractereLCD@data stored from wreg
   943  0009F6  6E03               	movwf	EscreveCaractereLCD@data,c
   944                           
   945                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
   946  0009F8  9483               	bcf	3971,2,c	;volatile
   947                           
   948                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
   949  0009FA  8283               	bsf	3971,1,c	;volatile
   950                           
   951                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
   952  0009FC  9083               	bcf	3971,0,c	;volatile
   953                           
   954                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
   955  0009FE  A803               	btfss	EscreveCaractereLCD@data,4,c
   956  000A00  D002               	goto	l80
   957  000A02  8883               	bsf	3971,4,c	;volatile
   958  000A04  D001               	goto	l969
   959  000A06                     l80:
   960                           
   961                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
   962  000A06  9883               	bcf	3971,4,c	;volatile
   963  000A08                     l969:
   964                           
   965                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
   966  000A08  AA03               	btfss	EscreveCaractereLCD@data,5,c
   967  000A0A  D002               	goto	l82
   968  000A0C  8A83               	bsf	3971,5,c	;volatile
   969  000A0E  D001               	goto	l973
   970  000A10                     l82:
   971                           
   972                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
   973  000A10  9A83               	bcf	3971,5,c	;volatile
   974  000A12                     l973:
   975                           
   976                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
   977  000A12  AC03               	btfss	EscreveCaractereLCD@data,6,c
   978  000A14  D002               	goto	l84
   979  000A16  8C83               	bsf	3971,6,c	;volatile
   980  000A18  D001               	goto	l977
   981  000A1A                     l84:
   982                           
   983                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
   984  000A1A  9C83               	bcf	3971,6,c	;volatile
   985  000A1C                     l977:
   986                           
   987                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
   988  000A1C  AE03               	btfss	EscreveCaractereLCD@data,7,c
   989  000A1E  D002               	goto	l86
   990  000A20  8E83               	bsf	3971,7,c	;volatile
   991  000A22  D001               	goto	l87
   992  000A24                     l86:
   993                           
   994                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
   995  000A24  9E83               	bcf	3971,7,c	;volatile
   996  000A26                     l87:
   997                           
   998                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
   999  000A26  8083               	bsf	3971,0,c	;volatile
  1000                           
  1001                           ;displayLCD.c: 358: Delay();
  1002  000A28  ECC7  F005         	call	_Delay	;wreg free
  1003                           
  1004                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1005  000A2C  9083               	bcf	3971,0,c	;volatile
  1006                           
  1007                           ;displayLCD.c: 360: Delay();
  1008  000A2E  ECC7  F005         	call	_Delay	;wreg free
  1009                           
  1010                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1011  000A32  A003               	btfss	EscreveCaractereLCD@data,0,c
  1012  000A34  D002               	goto	l88
  1013  000A36  8883               	bsf	3971,4,c	;volatile
  1014  000A38  D001               	goto	l89
  1015  000A3A                     l88:
  1016                           
  1017                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1018  000A3A  9883               	bcf	3971,4,c	;volatile
  1019  000A3C                     l89:
  1020                           
  1021                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1022  000A3C  A203               	btfss	EscreveCaractereLCD@data,1,c
  1023  000A3E  D002               	goto	l90
  1024  000A40  8A83               	bsf	3971,5,c	;volatile
  1025  000A42  D001               	goto	l91
  1026  000A44                     l90:
  1027                           
  1028                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1029  000A44  9A83               	bcf	3971,5,c	;volatile
  1030  000A46                     l91:
  1031                           
  1032                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1033  000A46  A403               	btfss	EscreveCaractereLCD@data,2,c
  1034  000A48  D002               	goto	l92
  1035  000A4A  8C83               	bsf	3971,6,c	;volatile
  1036  000A4C  D001               	goto	l93
  1037  000A4E                     l92:
  1038                           
  1039                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1040  000A4E  9C83               	bcf	3971,6,c	;volatile
  1041  000A50                     l93:
  1042                           
  1043                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1044  000A50  A603               	btfss	EscreveCaractereLCD@data,3,c
  1045  000A52  D002               	goto	l94
  1046  000A54  8E83               	bsf	3971,7,c	;volatile
  1047  000A56  D001               	goto	l95
  1048  000A58                     l94:
  1049                           
  1050                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1051  000A58  9E83               	bcf	3971,7,c	;volatile
  1052  000A5A                     l95:
  1053                           
  1054                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1055  000A5A  8083               	bsf	3971,0,c	;volatile
  1056                           
  1057                           ;displayLCD.c: 375: Delay();
  1058  000A5C  ECC7  F005         	call	_Delay	;wreg free
  1059                           
  1060                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1061  000A60  9083               	bcf	3971,0,c	;volatile
  1062                           
  1063                           ;displayLCD.c: 377: Delay();
  1064  000A62  ECC7  F005         	call	_Delay	;wreg free
  1065  000A66  0012               	return		;funcret
  1066  000A68                     __end_of_EscreveCaractereLCD:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           indf2	equ	0xFDF
  1077                           postinc2	equ	0xFDE
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _ConfiguraLCD *****************
  1083 ;; Defined at:
  1084 ;;		line 80 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        1 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    2
  1105 ;; This function calls:
  1106 ;;		_Delay
  1107 ;;		_EscreveComandoLCD
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text6
  1114  000854                     __ptext6:
  1115                           	opt stack 0
  1116  000854                     _ConfiguraLCD:
  1117                           	opt stack 28
  1118                           
  1119                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1120                           
  1121                           ;incstack = 0
  1122  000854  9495               	bcf	3989,2,c	;volatile
  1123                           
  1124                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1125  000856  9295               	bcf	3989,1,c	;volatile
  1126                           
  1127                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1128  000858  9095               	bcf	3989,0,c	;volatile
  1129                           
  1130                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1131  00085A  9895               	bcf	3989,4,c	;volatile
  1132                           
  1133                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1134  00085C  9A95               	bcf	3989,5,c	;volatile
  1135                           
  1136                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1137  00085E  9C95               	bcf	3989,6,c	;volatile
  1138                           
  1139                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1140  000860  9E95               	bcf	3989,7,c	;volatile
  1141                           
  1142                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  1143  000862  9483               	bcf	3971,2,c	;volatile
  1144                           
  1145                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  1146  000864  9283               	bcf	3971,1,c	;volatile
  1147                           
  1148                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  1149  000866  9083               	bcf	3971,0,c	;volatile
  1150                           
  1151                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  1152  000868  9E83               	bcf	3971,7,c	;volatile
  1153                           
  1154                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  1155  00086A  9C83               	bcf	3971,6,c	;volatile
  1156                           
  1157                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  1158  00086C  8A83               	bsf	3971,5,c	;volatile
  1159                           
  1160                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  1161  00086E  8883               	bsf	3971,4,c	;volatile
  1162                           
  1163                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  1164  000870  0EEA               	movlw	234
  1165  000872  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1166  000874  0EC3               	movlw	195
  1167  000876                     u507:
  1168  000876  2EE8               	decfsz	wreg,f,c
  1169  000878  D7FE               	bra	u507
  1170  00087A  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1171  00087C  D7FC               	bra	u507
  1172  00087E  F000               	nop	
  1173                           
  1174                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  1175  000880  8083               	bsf	3971,0,c	;volatile
  1176                           
  1177                           ;displayLCD.c: 117: Delay();
  1178  000882  ECC7  F005         	call	_Delay	;wreg free
  1179                           
  1180                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  1181  000886  9083               	bcf	3971,0,c	;volatile
  1182                           
  1183                           ;displayLCD.c: 119: Delay();
  1184  000888  ECC7  F005         	call	_Delay	;wreg free
  1185                           
  1186                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  1187  00088C  0E4E               	movlw	78
  1188  00088E  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1189  000890  0EEB               	movlw	235
  1190  000892                     u517:
  1191  000892  2EE8               	decfsz	wreg,f,c
  1192  000894  D7FE               	bra	u517
  1193  000896  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1194  000898  D7FC               	bra	u517
  1195  00089A  F000               	nop	
  1196                           
  1197                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  1198  00089C  8083               	bsf	3971,0,c	;volatile
  1199                           
  1200                           ;displayLCD.c: 128: Delay();
  1201  00089E  ECC7  F005         	call	_Delay	;wreg free
  1202                           
  1203                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  1204  0008A2  9083               	bcf	3971,0,c	;volatile
  1205                           
  1206                           ;displayLCD.c: 130: Delay();
  1207  0008A4  ECC7  F005         	call	_Delay	;wreg free
  1208                           
  1209                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  1210  0008A8  0E4E               	movlw	78
  1211  0008AA  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1212  0008AC  0EEB               	movlw	235
  1213  0008AE                     u527:
  1214  0008AE  2EE8               	decfsz	wreg,f,c
  1215  0008B0  D7FE               	bra	u527
  1216  0008B2  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1217  0008B4  D7FC               	bra	u527
  1218  0008B6  F000               	nop	
  1219                           
  1220                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  1221  0008B8  8083               	bsf	3971,0,c	;volatile
  1222                           
  1223                           ;displayLCD.c: 139: Delay();
  1224  0008BA  ECC7  F005         	call	_Delay	;wreg free
  1225                           
  1226                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  1227  0008BE  9083               	bcf	3971,0,c	;volatile
  1228                           
  1229                           ;displayLCD.c: 141: Delay();
  1230  0008C0  ECC7  F005         	call	_Delay	;wreg free
  1231                           
  1232                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  1233  0008C4  9E83               	bcf	3971,7,c	;volatile
  1234                           
  1235                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  1236  0008C6  9C83               	bcf	3971,6,c	;volatile
  1237                           
  1238                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  1239  0008C8  8A83               	bsf	3971,5,c	;volatile
  1240                           
  1241                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  1242  0008CA  9883               	bcf	3971,4,c	;volatile
  1243                           
  1244                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  1245  0008CC  8083               	bsf	3971,0,c	;volatile
  1246                           
  1247                           ;displayLCD.c: 152: Delay();
  1248  0008CE  ECC7  F005         	call	_Delay	;wreg free
  1249                           
  1250                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  1251  0008D2  9083               	bcf	3971,0,c	;volatile
  1252                           
  1253                           ;displayLCD.c: 154: Delay();
  1254  0008D4  ECC7  F005         	call	_Delay	;wreg free
  1255                           
  1256                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  1257  0008D8  0E28               	movlw	40
  1258  0008DA  EC79  F004         	call	_EscreveComandoLCD
  1259                           
  1260                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  1261  0008DE  0E06               	movlw	6
  1262  0008E0  EC79  F004         	call	_EscreveComandoLCD
  1263                           
  1264                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  1265  0008E4  0E0E               	movlw	14
  1266  0008E6  EC79  F004         	call	_EscreveComandoLCD
  1267                           
  1268                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  1269  0008EA  0E01               	movlw	1
  1270  0008EC  EC79  F004         	call	_EscreveComandoLCD
  1271  0008F0  0012               	return		;funcret
  1272  0008F2                     __end_of_ConfiguraLCD:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           indf2	equ	0xFDF
  1283                           postinc2	equ	0xFDE
  1284                           fsr2h	equ	0xFDA
  1285                           fsr2l	equ	0xFD9
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _EscreveComandoLCD *****************
  1289 ;; Defined at:
  1290 ;;		line 172 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  cmd             1    wreg     unsigned char 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  cmd             1    2[COMRAM] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0
  1305 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1307 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        1 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		_Delay
  1313 ;; This function is called by:
  1314 ;;		_ConfiguraLCD
  1315 ;;		_CriaCaractereLCD
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text7
  1320  0008F2                     __ptext7:
  1321                           	opt stack 0
  1322  0008F2                     _EscreveComandoLCD:
  1323                           	opt stack 28
  1324                           
  1325                           ;incstack = 0
  1326                           ;EscreveComandoLCD@cmd stored from wreg
  1327  0008F2  6E03               	movwf	EscreveComandoLCD@cmd,c
  1328                           
  1329                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  1330  0008F4  9483               	bcf	3971,2,c	;volatile
  1331                           
  1332                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  1333  0008F6  9283               	bcf	3971,1,c	;volatile
  1334                           
  1335                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  1336  0008F8  9083               	bcf	3971,0,c	;volatile
  1337                           
  1338                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  1339  0008FA  A803               	btfss	EscreveComandoLCD@cmd,4,c
  1340  0008FC  D002               	goto	l29
  1341  0008FE  8883               	bsf	3971,4,c	;volatile
  1342  000900  D001               	goto	l893
  1343  000902                     l29:
  1344                           
  1345                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  1346  000902  9883               	bcf	3971,4,c	;volatile
  1347  000904                     l893:
  1348                           
  1349                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  1350  000904  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  1351  000906  D002               	goto	l31
  1352  000908  8A83               	bsf	3971,5,c	;volatile
  1353  00090A  D001               	goto	l897
  1354  00090C                     l31:
  1355                           
  1356                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  1357  00090C  9A83               	bcf	3971,5,c	;volatile
  1358  00090E                     l897:
  1359                           
  1360                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  1361  00090E  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  1362  000910  D002               	goto	l33
  1363  000912  8C83               	bsf	3971,6,c	;volatile
  1364  000914  D001               	goto	l901
  1365  000916                     l33:
  1366                           
  1367                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  1368  000916  9C83               	bcf	3971,6,c	;volatile
  1369  000918                     l901:
  1370                           
  1371                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  1372  000918  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  1373  00091A  D002               	goto	l35
  1374  00091C  8E83               	bsf	3971,7,c	;volatile
  1375  00091E  D001               	goto	l36
  1376  000920                     l35:
  1377                           
  1378                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  1379  000920  9E83               	bcf	3971,7,c	;volatile
  1380  000922                     l36:
  1381                           
  1382                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  1383  000922  8083               	bsf	3971,0,c	;volatile
  1384                           
  1385                           ;displayLCD.c: 191: Delay();
  1386  000924  ECC7  F005         	call	_Delay	;wreg free
  1387                           
  1388                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  1389  000928  9083               	bcf	3971,0,c	;volatile
  1390                           
  1391                           ;displayLCD.c: 193: Delay();
  1392  00092A  ECC7  F005         	call	_Delay	;wreg free
  1393                           
  1394                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  1395  00092E  A003               	btfss	EscreveComandoLCD@cmd,0,c
  1396  000930  D002               	goto	l37
  1397  000932  8883               	bsf	3971,4,c	;volatile
  1398  000934  D001               	goto	l38
  1399  000936                     l37:
  1400                           
  1401                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  1402  000936  9883               	bcf	3971,4,c	;volatile
  1403  000938                     l38:
  1404                           
  1405                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  1406  000938  A203               	btfss	EscreveComandoLCD@cmd,1,c
  1407  00093A  D002               	goto	l39
  1408  00093C  8A83               	bsf	3971,5,c	;volatile
  1409  00093E  D001               	goto	l40
  1410  000940                     l39:
  1411                           
  1412                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  1413  000940  9A83               	bcf	3971,5,c	;volatile
  1414  000942                     l40:
  1415                           
  1416                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  1417  000942  A403               	btfss	EscreveComandoLCD@cmd,2,c
  1418  000944  D002               	goto	l41
  1419  000946  8C83               	bsf	3971,6,c	;volatile
  1420  000948  D001               	goto	l42
  1421  00094A                     l41:
  1422                           
  1423                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  1424  00094A  9C83               	bcf	3971,6,c	;volatile
  1425  00094C                     l42:
  1426                           
  1427                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  1428  00094C  A603               	btfss	EscreveComandoLCD@cmd,3,c
  1429  00094E  D002               	goto	l43
  1430  000950  8E83               	bsf	3971,7,c	;volatile
  1431  000952  D001               	goto	l44
  1432  000954                     l43:
  1433                           
  1434                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  1435  000954  9E83               	bcf	3971,7,c	;volatile
  1436  000956                     l44:
  1437                           
  1438                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  1439  000956  8083               	bsf	3971,0,c	;volatile
  1440                           
  1441                           ;displayLCD.c: 207: Delay();
  1442  000958  ECC7  F005         	call	_Delay	;wreg free
  1443                           
  1444                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  1445  00095C  9083               	bcf	3971,0,c	;volatile
  1446                           
  1447                           ;displayLCD.c: 209: Delay();
  1448  00095E  ECC7  F005         	call	_Delay	;wreg free
  1449                           
  1450                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  1451  000962  0403               	decf	EscreveComandoLCD@cmd,w,c
  1452  000964  B4D8               	btfsc	status,2,c
  1453  000966  D008               	goto	l929
  1454  000968  0E02               	movlw	2
  1455  00096A  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  1456  00096C  B4D8               	btfsc	status,2,c
  1457  00096E  D004               	goto	l929
  1458  000970  0E03               	movlw	3
  1459  000972  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  1460  000974  A4D8               	btfss	status,2,c
  1461  000976  0012               	return	
  1462  000978                     l929:
  1463                           
  1464                           ;displayLCD.c: 215: { Delay(); }
  1465  000978  ECC7  F005         	call	_Delay	;wreg free
  1466  00097C  0012               	return	
  1467  00097E                     __end_of_EscreveComandoLCD:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1l	equ	0xFE1
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _Delay *****************
  1484 ;; Defined at:
  1485 ;;		line 54 in file "../../BIBLIOTECAS_FATEC/Biblioteca_FATEC/displayLCD.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  Cnt2            1    1[COMRAM] unsigned char 
  1490 ;;  Cnt1            1    0[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0
  1501 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_ConfiguraLCD
  1510 ;;		_EscreveComandoLCD
  1511 ;;		_EnderecoCursor
  1512 ;;		_EscreveCaractereLCD
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text8
  1517  000B8E                     __ptext8:
  1518                           	opt stack 0
  1519  000B8E                     _Delay:
  1520                           	opt stack 28
  1521                           
  1522                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  1523                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  1524                           
  1525                           ;incstack = 0
  1526  000B8E  0E00               	movlw	0
  1527  000B90  6E01               	movwf	Delay@Cnt1,c
  1528  000B92                     l869:
  1529  000B92  0E1D               	movlw	29
  1530  000B94  6401               	cpfsgt	Delay@Cnt1,c
  1531  000B96  D001               	goto	l19
  1532  000B98  0012               	return	
  1533  000B9A                     l19:
  1534                           
  1535                           ;displayLCD.c: 59: {
  1536                           ;displayLCD.c: 60: __nop();
  1537  000B9A  F000               	nop	
  1538                           
  1539                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  1540  000B9C  0E00               	movlw	0
  1541  000B9E  6E02               	movwf	Delay@Cnt2,c
  1542  000BA0                     l875:
  1543  000BA0  0E1D               	movlw	29
  1544  000BA2  6402               	cpfsgt	Delay@Cnt2,c
  1545  000BA4  D001               	goto	l21
  1546  000BA6  D003               	goto	l883
  1547  000BA8                     l21:
  1548                           
  1549                           ;displayLCD.c: 62: {
  1550                           ;displayLCD.c: 63: __nop();
  1551  000BA8  F000               	nop	
  1552  000BAA  2A02               	incf	Delay@Cnt2,f,c
  1553  000BAC  D7F9               	goto	l875
  1554  000BAE                     l883:
  1555  000BAE  2A01               	incf	Delay@Cnt1,f,c
  1556  000BB0  D7F0               	goto	l869
  1557  000BB2                     __end_of_Delay:
  1558                           	opt stack 0
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           postinc2	equ	0xFDE
  1569                           fsr2h	equ	0xFDA
  1570                           fsr2l	equ	0xFD9
  1571                           status	equ	0xFD8
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1l	equ	0xFE1
  1580                           indf2	equ	0xFDF
  1581                           postinc2	equ	0xFDE
  1582                           fsr2h	equ	0xFDA
  1583                           fsr2l	equ	0xFD9
  1584                           status	equ	0xFD8
  1585                           
  1586                           	psect	rparam
  1587  0000                     tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1l	equ	0xFE1
  1595                           indf2	equ	0xFDF
  1596                           postinc2	equ	0xFDE
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    70
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@Texto_1(COMRAM[15]), main@Texto_0(COMRAM[15]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_PosicaoCursorLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    1401
                                              6 COMRAM    30    30      0
                       _ConfiguraLCD
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     150
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     499
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     165
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveFraseRamLCD                                   2     0      2     417
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveCaractereLCD                                  1     1      0     180
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     285
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveComandoLCD                                    1     1      0     225
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      3C       1       63.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      20        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Mar 06 21:16:22 2021

                          l21 0BA8                            l31 090C                            l40 0942  
                          l41 094A                            l33 0916                            l42 094C  
                          l19 0B9A                            l43 0954                            l35 0920  
                          l51 0A7A                            l44 0956                            l36 0922  
                          l60 0AB0                            l37 0936                            l29 0902  
                          l61 0AB8                            l53 0A84                            l38 0938  
                          l62 0ABA                            l70 0ADC                            l39 0940  
                          l63 0AC2                            l55 0A8E                            l80 0A06  
                          l64 0AC4                            l56 0A90                            l57 0AA4  
                          l90 0A44                            l82 0A10                            l58 0AA6  
                          l91 0A46                            l59 0AAE                            l92 0A4E  
                          l84 0A1A                            l93 0A50                            l94 0A58  
                          l86 0A24                            l95 0A5A                            l87 0A26  
                          l88 0A3A                            l89 0A3C                           l162 09F4  
                         l901 0918                           l941 0A86                           l929 0978  
                         l937 0A7C                           l883 0BAE                           l875 0BA0  
                         l869 0B92                           l893 0904                           l973 0A12  
                         l897 090E                           l977 0A1C                           l969 0A08  
                         u450 0996                           u507 0876                           u460 09AE  
                         u517 0892                           u527 08AE                           u497 0BBA  
                 main@Texto_0 0007                   main@Texto_1 0016                           wreg 000FE8  
                        l1203 0B12                          l1213 0B6C                          l1221 0BB4  
                        l1207 0B18                          l1223 0BC4                          l1217 0B7E  
                        l1191 0AE8                          l1195 0AF6                          l1199 0B04  
                        STR_1 0847                          _main 097E                          fsr2h 000FDA  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        start 0000                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0B8E  
                       ?_main 0001                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISE 000F96                         _Delay 0B8E               __end_of_dpowers 0829  
        EscreveComandoLCD@cmd 0003                         tablat 000FF5                         status 000FD8  
             __initialization 0B34                  __end_of_main 09F6                        ??_main 0007  
        __end_of_ConfiguraLCD 08F2                 __activetblptr 000002             _EscreveComandoLCD 08F2  
                      ?_Delay 0001            ?_EscreveComandoLCD 0001                        _ADCON1 000FC1  
         ??_EscreveComandoLCD 0003              __end_of_delay_ms 0BD4             ?_PosicaoCursorLCD 0004  
__size_of_EscreveCaractereLCD 0072            ??_PosicaoCursorLCD 0005                        clear_0 0B5A  
   __end_of_EscreveComandoLCD 097E                  __pdataCOMRAM 0036                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
     __size_of_EnderecoCursor 006A                    __accesstop 0060       __end_of__initialization 0B60  
               ___rparam_used 000001                 __end_of_Delay 0BB2                __pcstackCOMRAM 0001  
                     ??_Delay 0001         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C  
          _EscreveFraseRamLCD 0B6A                     ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004  
                _ConfiguraLCD 0854                       __Hparam 0000                       __Lparam 0000  
        ??_EscreveFraseRamLCD 0006                  __psmallconst 0800                       __pcinit 0B34  
                     __ramtop 0800                       __ptext0 097E                       __ptext1 0BB2  
                     __ptext2 0AD2                       __ptext3 0A68                       __ptext4 0B6A  
                     __ptext5 09F6                       __ptext6 0854                       __ptext7 08F2  
                     __ptext8 0B8E                       _dpowers 0801                    ??_delay_ms 0003  
              _EnderecoCursor 0A68                     Delay@Cnt1 0001                     Delay@Cnt2 0002  
         _EscreveCaractereLCD 09F6          end_of_initialization 0B60                       ftoa@buf 0025  
               __Lmediumconst 0000             __end_ofmain@F3880 0847             __end_ofmain@F3878 0838  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
        ?_EscreveCaractereLCD 0001   PosicaoCursorLCD@EnderecoLCD 0006                     _PORTDbits 000F83  
                   _PORTEbits 000F84        __end_of_EnderecoCursor 0AD2                     _TRISDbits 000F95  
   __size_of_PosicaoCursorLCD 0062         ??_EscreveCaractereLCD 0003                 __pidataCOMRAM 0BD4  
             ?_EnderecoCursor 0001           start_initialization 0B34      EscreveFraseRamLCD@buffer 0004  
                 __pbssCOMRAM 0025             __size_of_delay_ms 0022        EscreveInteiroLCD@F4004 0036  
                 __smallconst 0800                __size_of_Delay 0024              _PosicaoCursorLCD 0AD2  
      EnderecoCursor@endereco 0003       EscreveCaractereLCD@data 0003                     main@F3880 0838  
                   main@F3878 0829   __size_of_EscreveFraseRamLCD 0024         delay_ms@tempodeAtraso 0001  
                   copy_data0 0B48                      __Hrparam 0000                      __Lrparam 0000  
            ??_EnderecoCursor 0003                      _delay_ms 0BB2                 __size_of_main 0078  
 __end_of_EscreveCaractereLCD 0A68                 ?_ConfiguraLCD 0001      __end_of_PosicaoCursorLCD 0B34  
      PosicaoCursorLCD@coluna 0004         PosicaoCursorLCD@linha 0005                ??_ConfiguraLCD 0004  
